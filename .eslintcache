[{"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\store\\ConfigStore.js":"4","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\poll-result.js":"5","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\front-page.js":"6","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\poll.js":"7","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\create-poll.js":"8","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\poll-admin.js":"9","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\edit-poll.js":"10","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\useraccount.js":"11","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\team.js":"12","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\store\\reducers\\LoginReducer.js":"13","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\notification.js":"14","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\social-share.js":"15","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-icon.js":"16","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\header.js":"17","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\reportPoll.js":"18","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\forgotpassword.js":"19","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-info.js":"20","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-icon-settings.js":"21","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\loader\\loader.js":"22","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\loader\\loader2.js":"23","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\store\\actions\\LogoutAction.js":"24","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\store\\actions\\LoginAction.js":"25","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\store\\constant.js":"26","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\no-polls\\polldeleted.js":"27","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\searchResultsMini.js":"28","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\searchResults.js":"29","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\sendFeedback.js":"30","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\list-mini-polls.js":"31","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\list-polls.js":"32","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\no-polls\\no-polls.js":"33","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\dashboard.js":"34","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\securityQuestion.js":"35","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\deleteAccount.js":"36","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\changePassword.js":"37"},{"size":721,"mtime":1711433269200,"results":"38","hashOfConfig":"39"},{"size":1372,"mtime":1711806736099,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1711433269204,"results":"41","hashOfConfig":"39"},{"size":1154,"mtime":1711433269207,"results":"42","hashOfConfig":"39"},{"size":16846,"mtime":1711877724598,"results":"43","hashOfConfig":"39"},{"size":14977,"mtime":1711433269164,"results":"44","hashOfConfig":"39"},{"size":10849,"mtime":1711807841718,"results":"45","hashOfConfig":"39"},{"size":12416,"mtime":1711877632440,"results":"46","hashOfConfig":"39"},{"size":19176,"mtime":1711877699985,"results":"47","hashOfConfig":"39"},{"size":13412,"mtime":1711807841730,"results":"48","hashOfConfig":"39"},{"size":5413,"mtime":1711877742503,"results":"49","hashOfConfig":"39"},{"size":3110,"mtime":1711433269180,"results":"50","hashOfConfig":"39"},{"size":461,"mtime":1711433269212,"results":"51","hashOfConfig":"39"},{"size":677,"mtime":1711433269171,"results":"52","hashOfConfig":"39"},{"size":3384,"mtime":1711433269178,"results":"53","hashOfConfig":"39"},{"size":8994,"mtime":1711433269182,"results":"54","hashOfConfig":"39"},{"size":653,"mtime":1711433269165,"results":"55","hashOfConfig":"39"},{"size":3310,"mtime":1711433269178,"results":"56","hashOfConfig":"39"},{"size":11901,"mtime":1711433269163,"results":"57","hashOfConfig":"39"},{"size":9870,"mtime":1711807841715,"results":"58","hashOfConfig":"39"},{"size":8522,"mtime":1711433269181,"results":"59","hashOfConfig":"39"},{"size":652,"mtime":1711433269166,"results":"60","hashOfConfig":"39"},{"size":553,"mtime":1711433269167,"results":"61","hashOfConfig":"39"},{"size":305,"mtime":1711433269209,"results":"62","hashOfConfig":"39"},{"size":782,"mtime":1711433269208,"results":"63","hashOfConfig":"39"},{"size":108,"mtime":1711433269210,"results":"64","hashOfConfig":"39"},{"size":473,"mtime":1711433269192,"results":"65","hashOfConfig":"39"},{"size":3954,"mtime":1711433269195,"results":"66","hashOfConfig":"39"},{"size":3450,"mtime":1711433269193,"results":"67","hashOfConfig":"39"},{"size":1563,"mtime":1711433269196,"results":"68","hashOfConfig":"39"},{"size":9681,"mtime":1711433269189,"results":"69","hashOfConfig":"39"},{"size":8751,"mtime":1711433269190,"results":"70","hashOfConfig":"39"},{"size":776,"mtime":1711433269191,"results":"71","hashOfConfig":"39"},{"size":4174,"mtime":1711433269186,"results":"72","hashOfConfig":"39"},{"size":4857,"mtime":1711433269196,"results":"73","hashOfConfig":"39"},{"size":3470,"mtime":1711433269188,"results":"74","hashOfConfig":"39"},{"size":3405,"mtime":1711433269185,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1gkjuim",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\index.js",[],["153","154"],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\store\\ConfigStore.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\poll-result.js",["155","156"],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\front-page.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\poll.js",["157","158"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Notification from './notification';\r\nimport PollDeleted from './user-settings/no-polls/polldeleted';\r\nimport Header from './header';\r\nimport io from 'socket.io-client';\r\nimport Report from './reportPoll';\r\nimport Loader from './loader/loader';\r\nimport UserIcon from './user-icon';\r\nimport { connect } from 'react-redux';\r\nimport { LogoutAction } from '../store/actions/LogoutAction';\r\nimport { ErrorOutline } from '@material-ui/icons/';\r\nlet socket;\r\n\r\nfunction Poll(props) {\r\n  const ENDPOINT = 'http://localhost:5000';\r\n  const history = useHistory();\r\n  const [openVote, setOpenVote] = useState(true);\r\n  const [username, setUsername] = useState(\r\n    props.userDetails ? props.userDetails.username : null\r\n  );\r\n  const [voted, setVoted] = useState(false);\r\n  const [expired, setExpired] = useState(false);\r\n  const [report, setReport] = useState(false);\r\n  const [loader, setLoader] = useState(true);\r\n  const [flash, setFlash] = useState(false);\r\n  const [available, setAvailable] = useState(true);\r\n  const [question, setQuestion] = useState('');\r\n  const [options, setOptions] = useState([{ id: '', options: '', count: 0 }]);\r\n  const [pollid, setPollid] = useState('');\r\n  const [owner, setOwner] = useState('');\r\n  const [key, setKey] = useState('');\r\n  const [response, setResponse] = useState({\r\n    id: '',\r\n    options: '',\r\n    count: 0,\r\n  });\r\n  const [toast, setToast] = useState({\r\n    snackbaropen: false,\r\n    msg: '',\r\n    not: '',\r\n  });\r\n  const snackbarclose = (event) => {\r\n    setToast({\r\n      snackbaropen: false,\r\n    });\r\n  };\r\n\r\n  var cache = JSON.parse(\r\n    localStorage.getItem(\r\n      question.toLowerCase().trim().slice(0, 4) + pollid.slice(0, 6)\r\n    )\r\n  );\r\n  useEffect(() => {\r\n    if (cache) {\r\n      if (cache.pollid === pollid) {\r\n        history.push('/poll-result/' + pollid);\r\n      }\r\n    }\r\n  }, [pollid, history, cache]);\r\n  useEffect(() => {\r\n    if (voted) {\r\n      history.push('/poll-result/' + pollid);\r\n    }\r\n  }, [pollid, history, voted]);\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    var x = props.match.params.id;\r\n    const id = x;\r\n    setPollid(id);\r\n    socket.emit('getPoll', { id: id, username: username });\r\n    socket.on('receivePoll', (poll) => {\r\n      if (poll) {\r\n        setLoader(false);\r\n        if (poll.expired) {\r\n          localStorage.setItem(\r\n            'notify',\r\n            JSON.stringify({\r\n              type: 'error',\r\n              msg: 'Sorry, the poll has expired!',\r\n            })\r\n          );\r\n          history.push('/poll-result/' + poll.pollid);\r\n        } else {\r\n          let medium = [];\r\n          //const data = response.data;\r\n          setOwner(poll.username);\r\n          setQuestion(poll.question);\r\n          setKey(poll.key);\r\n          setExpired(poll.expired);\r\n          setVoted(poll.voted);\r\n          setOpenVote(poll.openvote);\r\n          poll.options.map((option) => {\r\n            medium.push(option);\r\n            return medium;\r\n          });\r\n          setOptions(medium);\r\n        }\r\n      } else {\r\n        setLoader(false);\r\n        setAvailable(false);\r\n      }\r\n    });\r\n  }, [question, pollid, expired, history, props, ENDPOINT]);\r\n\r\n  function settingResponse({ option }, index) {\r\n    setResponse({\r\n      id: option.id,\r\n      options: option.options,\r\n      count: option.count + 1,\r\n      pollid: pollid,\r\n      key: key,\r\n      index: index,\r\n      username: username,\r\n      openvote: openVote,\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (username || openVote) {\r\n      if (response.options.length > 0) {\r\n        e.preventDefault();\r\n        axios\r\n          .post('/submitresponse', response)\r\n          .then(function (res) {\r\n            if (res.data.success) {\r\n              localStorage.setItem(\r\n                'notify',\r\n                JSON.stringify({\r\n                  type: 'success',\r\n                  msg: 'Thankyou, for voting!',\r\n                })\r\n              );\r\n              if (!username) {\r\n                localStorage.setItem(\r\n                  question.toLowerCase().trim().slice(0, 4) +\r\n                    pollid.slice(0, 6),\r\n                  JSON.stringify({\r\n                    index: response.index,\r\n                    pollid: pollid,\r\n                  })\r\n                );\r\n              }\r\n              history.push('/poll-result/' + pollid);\r\n            } else {\r\n              console.log('Error submitting response');\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        setToast({\r\n          snackbaropen: true,\r\n          msg: 'Please, select a option!',\r\n          not: 'error',\r\n        });\r\n      }\r\n      setFlash(false);\r\n    } else {\r\n      setFlash(true);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {loader ? <Loader /> : null}\r\n      {report ? (\r\n        <Report\r\n          setReport={setReport}\r\n          pollid={pollid}\r\n          owner={owner}\r\n          setToast={setToast}\r\n        />\r\n      ) : null}\r\n      <Header />\r\n      {username ? (\r\n        <UserIcon username={username} logout={props.logoutAction} />\r\n      ) : null}\r\n      <div className=\"ui-outer-2\">\r\n        <div className=\"ui-container pt-5 pb-5\">\r\n          {available > 0 ? (\r\n            <div className=\"\">\r\n              <h2\r\n                className=\"mb-5 w-100 heading\"\r\n                style={{\r\n                  wordWrap: 'break-word',\r\n                }}\r\n              >\r\n                {question}\r\n              </h2>\r\n              <div className=\"d-flex flex-column resp-width-75 m-auto\">\r\n                <form>\r\n                  {options.map((option, index) => (\r\n                    <div\r\n                      className={\r\n                        'w-100 mb-4 shadow-lg rounded bg-white radio-label' +\r\n                        (response.options === option.options\r\n                          ? ' selected'\r\n                          : ' ')\r\n                      }\r\n                      key={option.id}\r\n                      tabIndex=\"1\"\r\n                    >\r\n                      <div className=\"d-flex align-items-center radio-customised position-relative\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          id={option.id}\r\n                          name=\"option\"\r\n                          value={option.options}\r\n                          checked={response.options === option.options}\r\n                          onChange={() => settingResponse({ option }, index)}\r\n                          className=\"d-inline-block ml-3 mr-3\"\r\n                        />\r\n                        <label\r\n                          htmlFor={option.id}\r\n                          className=\"py-3 font-weight-bold w-100 mb-0 text-primary-dark d-inline-block poll-options\"\r\n                          style={{\r\n                            wordWrap: 'break-word',\r\n                            cursor: 'pointer',\r\n                          }}\r\n                        >\r\n                          {option.options}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  <Notification\r\n                    switcher={toast.snackbaropen}\r\n                    close={snackbarclose}\r\n                    message={toast.msg}\r\n                    nottype={toast.not}\r\n                  />\r\n                  {flash ? (\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <span\r\n                        className=\"text-center  mx-md-auto py-1 px-3 font-weight-bold mb-2\"\r\n                        style={{\r\n                          color: '#ff4444',\r\n                          borderRadius: '20px',\r\n                          background: 'rgba(255, 68, 68, 0.2)',\r\n                        }}\r\n                      >\r\n                        <ErrorOutline fontSize=\"small\" className=\"mr-2\" />\r\n                        Please, Sign in to vote!, click{' '}\r\n                        <button\r\n                          className=\"bg-transparent text-info border-0 px-0 font-weight-bold\"\r\n                          onClick={() =>\r\n                            history.push({\r\n                              pathname: '/',\r\n                              state: { pollid: pollid },\r\n                            })\r\n                          }\r\n                        >\r\n                          here\r\n                        </button>\r\n                      </span>\r\n                    </div>\r\n                  ) : null}\r\n                  <div className=\"mt-3 d-flex flex-column flex-md-row\">\r\n                    <div className=\"col-0 col-md-8 d-flex px-0 justify-content-center justify-content-md-start\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        onClick={handleSubmit}\r\n                        className=\"h5 focus-outline-none py-3 font-weight-bold focus-shadow r-w-50 bg-success border-0 text-white px-2 shadow-lg hover-shadow-lg rounded-lg\"\r\n                      >\r\n                        Submit your vote\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-0 col-md-4 my-md-auto my-3 px-0\">\r\n                      <Link\r\n                        to={'/poll-result/' + pollid}\r\n                        className=\"d-flex justify-content-end\"\r\n                      >\r\n                        <h4 className=\" mb-0 text-secondary font-weight-normal\">\r\n                          View Results <FontAwesomeIcon icon={faChevronRight} />\r\n                        </h4>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div className=\"d-block mb-3\" style={{ textAlign: 'right' }}>\r\n                <button\r\n                  className=\"font-weight-bold px-2 py-1 rounded-lg border bg-secondary text-light\"\r\n                  onClick={() => setReport(true)}\r\n                >\r\n                  Report Poll\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <PollDeleted />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    userDetails: state.login.userDetails,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  logoutAction: LogoutAction,\r\n};\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Poll);\r\n","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\create-poll.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\poll-admin.js",["159","160","161"],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\edit-poll.js",["162"],"import '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faPlus,\r\n  faBookmark,\r\n  faTrashAlt,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport short from 'short-uuid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UserIcon from './user-icon';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Header from './header';\r\nimport { Switch } from 'antd';\r\nimport '../../node_modules/antd/dist/antd.css';\r\nimport { connect } from 'react-redux';\r\nimport io from 'socket.io-client';\r\nlet socket;\r\n\r\nfunction EditPoll(props) {\r\n  const ENDPOINT = 'http://localhost:5000';\r\n  const history = useHistory();\r\n  const [openVote, setOpenVote] = useState(true);\r\n  const [pollid, setPollid] = useState('');\r\n  const [key, setKey] = useState('');\r\n  const [questions, setQuestion] = useState({\r\n    question: '',\r\n    error: false,\r\n    expiration: '',\r\n    expirationError: false,\r\n  });\r\n  const [inputFields, setInputFields] = useState([]);\r\n  const [toast, setToast] = useState({\r\n    snackbaropen: false,\r\n    snackbar2open: false,\r\n  });\r\n  useEffect(() => {\r\n    if (!props.userDetails.username) {\r\n      history.push('/');\r\n    }\r\n  }, [props, history]);\r\n  useEffect(() => {\r\n    var totalvotes;\r\n    socket = io(ENDPOINT);\r\n    var x = props.location.state;\r\n    const id = x.pollid;\r\n    if (totalvotes > 0) {\r\n      history.push({\r\n        pathname: '/poll-admin',\r\n        state: { pollid: x.pollid, key: x.key },\r\n      });\r\n    }\r\n    setPollid(x.pollid);\r\n    setKey(x.key);\r\n    socket.emit('getPollToEdit', id);\r\n    socket.on('receivePollToEdit', (poll) => {\r\n      let medium = [];\r\n      setQuestion({\r\n        ...questions,\r\n        question: poll.question,\r\n        expiration: poll.expiration,\r\n      });\r\n      poll.options.map((option) => {\r\n        totalvotes += option.count;\r\n        medium.push(option);\r\n        return medium;\r\n      });\r\n      setInputFields(medium);\r\n      setOpenVote(poll.openvote);\r\n    });\r\n  }, [props, setQuestion, history, ENDPOINT]);\r\n\r\n  const snackbarclose = (event) => {\r\n    setToast({\r\n      snackbaropen: false,\r\n      snackbar2open: false,\r\n    });\r\n  };\r\n  const showError = (value, error) => value.trim().length === 0 && error;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const emptyQuestion = questions.question.trim().length > 0;\r\n    const emptyOptions = inputFields.every((obj) => {\r\n      return obj.options.length > 0;\r\n    });\r\n    const emptyExpiration = questions.expiration;\r\n    if (!emptyQuestion) {\r\n      setQuestion({ ...questions, error: true });\r\n    }\r\n    if (!emptyOptions) {\r\n      setInputFields(\r\n        [...inputFields].map((object) => {\r\n          if (object.options === '') {\r\n            return {\r\n              ...object,\r\n              error: true,\r\n            };\r\n          } else return object;\r\n        })\r\n      );\r\n    } else {\r\n      if (emptyExpiration) {\r\n        const data = {\r\n          question: questions.question,\r\n          expiration: questions.expiration,\r\n          options: inputFields,\r\n          pollid: pollid,\r\n          key: key,\r\n          openvote: openVote,\r\n        };\r\n        axios\r\n          .post('/editpoll', data)\r\n          .then(function (response) {\r\n            if (response.data.success) {\r\n              localStorage.setItem(\r\n                'notify',\r\n                JSON.stringify({\r\n                  type: 'success',\r\n                  msg: 'Changes saved!',\r\n                })\r\n              );\r\n              history.push({\r\n                pathname: '/poll-admin',\r\n                state: {\r\n                  pollid: pollid,\r\n                  key: key,\r\n                },\r\n              });\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        setQuestion({ ...questions, expirationError: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddfields = () => {\r\n    setInputFields([\r\n      ...inputFields,\r\n      { id: short.generate(), options: '', error: false, count: 0 },\r\n    ]);\r\n    setToast({ snackbar2open: true });\r\n  };\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <UserIcon\r\n        username={props.userDetails.username}\r\n        logout={props.logoutAction}\r\n      />\r\n      <div className=\"ui-outer\">\r\n        <div className=\"ui-container py-5 px-5\">\r\n          <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <div className=\"mx-auto\">\r\n              <div className=\"d-flex justify-content-between flex-row align-items-baseline\">\r\n                <div>\r\n                  <h3>Edit Poll</h3>\r\n                  <p className=\"mt-4 mb-0 text-large text-secondary font-medium\">\r\n                    Edit below fields as you need.\r\n                  </p>\r\n                </div>\r\n                <Link\r\n                  to={{ pathname: '/poll-admin', state: { pollid: pollid } }}\r\n                >\r\n                  <span className=\"text-light bg-danger align-self-end font-weight-bold rounded-lg px-4 py-2\">\r\n                    Cancel\r\n                  </span>\r\n                </Link>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <div className=\"flex flex-column question\">\r\n                  <label className=\"mb-3 w-100 font-weight-bold content-text\">\r\n                    Poll Question\r\n                  </label>\r\n                  <TextField\r\n                    {...(showError(questions.question, questions.error) && {\r\n                      ...{\r\n                        error: questions.error,\r\n                        helperText: 'Enter the question.',\r\n                      },\r\n                    })}\r\n                    id={questions.id}\r\n                    name=\"question\"\r\n                    multiline={true}\r\n                    rows={3}\r\n                    className=\"textareastyle w-100 py-4 rounded-lg px-3 outline-none  border border-gray \"\r\n                    placeholder=\"What's you favorite TV Show?\"\r\n                    defaultValue={questions.question}\r\n                    onChange={(e) =>\r\n                      setQuestion({ ...questions, question: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n                <Snackbar\r\n                  anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                  open={toast.snackbaropen}\r\n                  onClose={snackbarclose}\r\n                  autoHideDuration={2000}\r\n                  action={[\r\n                    <IconButton\r\n                      arial-label=\"Close\"\r\n                      color=\"inherit\"\r\n                      onClick={snackbarclose}\r\n                    >\r\n                      x\r\n                    </IconButton>,\r\n                  ]}\r\n                >\r\n                  <MuiAlert onClose={snackbarclose} severity=\"success\">\r\n                    Success, poll submitted!\r\n                  </MuiAlert>\r\n                </Snackbar>\r\n\r\n                <Snackbar\r\n                  anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                  open={toast.snackbar2open}\r\n                  onClose={snackbarclose}\r\n                  autoHideDuration={2000}\r\n                  action={[\r\n                    <IconButton\r\n                      arial-label=\"Close\"\r\n                      color=\"inherit\"\r\n                      onClick={snackbarclose}\r\n                    >\r\n                      x\r\n                    </IconButton>,\r\n                  ]}\r\n                >\r\n                  <MuiAlert onClose={snackbarclose} severity=\"info\">\r\n                    Added another field!\r\n                  </MuiAlert>\r\n                </Snackbar>\r\n\r\n                {inputFields.map((inputField, index) => (\r\n                  <div className=\"options mt-2 flex-column\" key={inputField.id}>\r\n                    <div className=\"flex align-items-center mb-3\">\r\n                      <div className=\"flex flex-column\">\r\n                        <label className=\"mb-3 w-100 content-text font-weight-bold\">\r\n                          Option {index + 1}\r\n                        </label>\r\n                        <div className=\"flex align-items-center justify-content-between\">\r\n                          <TextField\r\n                            {...(showError(\r\n                              inputField.options,\r\n                              inputField.error\r\n                            ) && {\r\n                              ...{\r\n                                error: inputField.error,\r\n                                helperText: 'Enter atleast 2 options',\r\n                              },\r\n                            })}\r\n                            id={inputField.id}\r\n                            name=\"options\"\r\n                            className=\" py-3 rounded-lg px-3 textareastyle inputfield focus-shadow transition-all duration-200 text-gray-700 focus-outline-none  border border-gray-300 focus:shadow-outline\"\r\n                            placeholder={'Option' + (index + 1)}\r\n                            value={inputField.options}\r\n                            onChange={(event) =>\r\n                              handleChangeInput(inputField.id, event)\r\n                            }\r\n                          />\r\n                          <button\r\n                            hidden={inputFields.length === 2}\r\n                            onClick={() => handleRemoveFields(inputField.id)}\r\n                            className=\" delete ml-2\"\r\n                          >\r\n                            <FontAwesomeIcon\r\n                              className=\" text-danger\"\r\n                              icon={faTrashAlt}\r\n                            />\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleAddfields}\r\n                  className=\"px-5 py-3 border-0  bg-dark rounded-lg font-weight-bold flex align-items-center justify-content-between text-white\"\r\n                >\r\n                  <span className=\"mr-3\">\r\n                    Add another option\r\n                    <FontAwesomeIcon className=\"ml-2\" icon={faPlus} />\r\n                  </span>\r\n                </button>\r\n                <label className=\"mt-3 w-100 content-text font-weight-bold\">\r\n                  Set Poll Expiration\r\n                </label>\r\n                <TextField\r\n                  type=\"datetime-local\"\r\n                  variant=\"outlined\"\r\n                  error={questions.expirationError}\r\n                  helperText={questions.expirationError ? 'Required!' : null}\r\n                  className=\"bg-light\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={questions.expiration}\r\n                  onChange={(e) =>\r\n                    setQuestion({ ...questions, expiration: e.target.value })\r\n                  }\r\n                />\r\n                <div className=\"mt-3\">\r\n                  <div className=\"voting-style d-inline-flex align-items-center\">\r\n                    <label className=\"my-auto ml-md-3\">Allow open voting</label>\r\n                    <Switch\r\n                      size=\"default\"\r\n                      onClick={() => setOpenVote(!openVote)}\r\n                      checked={openVote}\r\n                      className=\"mx-3\"\r\n                      style={{\r\n                        backgroundColor: openVote ? 'purple' : 'gray',\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <span className=\"note-voting\">\r\n                    Note: Open voting will allow users to vote without signing\r\n                    in\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-content-center mt-5 pt-3 \">\r\n                <button\r\n                  type=\"submit\"\r\n                  /*onClick={handleSubmit}*/\r\n                  className=\"px-5 py-3 bg-success border-0 text-white font-weight-bold rounded-lg\"\r\n                >\r\n                  <FontAwesomeIcon className=\"mr-2\" icon={faBookmark} />\r\n                  Save changes\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    userDetails: state.login.userDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps, null)(EditPoll);\r\n","C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\useraccount.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\team.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\store\\reducers\\LoginReducer.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\notification.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\social-share.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-icon.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\header.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\reportPoll.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\forgotpassword.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-info.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-icon-settings.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\loader\\loader.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\loader\\loader2.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\store\\actions\\LogoutAction.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\store\\actions\\LoginAction.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\store\\constant.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\no-polls\\polldeleted.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\searchResultsMini.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\searchResults.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\sendFeedback.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\list-mini-polls.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\list-polls.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\no-polls\\no-polls.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\dashboard.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\securityQuestion.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\deleteAccount.js",[],"C:\\Users\\DELL\\Desktop\\Poll\\Opinion-poll\\client-side\\src\\components\\user-settings\\changePassword.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":34,"column":20,"nodeType":"169","messageId":"170","endLine":34,"endColumn":31},{"ruleId":"171","severity":1,"message":"172","line":165,"column":6,"nodeType":"173","endLine":165,"endColumn":23,"suggestions":"174"},{"ruleId":"167","severity":1,"message":"168","line":24,"column":20,"nodeType":"169","messageId":"170","endLine":24,"endColumn":31},{"ruleId":"171","severity":1,"message":"172","line":110,"column":6,"nodeType":"173","endLine":110,"endColumn":59,"suggestions":"175"},{"ruleId":"167","severity":1,"message":"176","line":9,"column":10,"nodeType":"169","messageId":"170","endLine":9,"endColumn":16},{"ruleId":"167","severity":1,"message":"177","line":10,"column":10,"nodeType":"169","messageId":"170","endLine":10,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":36,"column":20,"nodeType":"169","messageId":"170","endLine":36,"endColumn":31},{"ruleId":"171","severity":1,"message":"178","line":76,"column":6,"nodeType":"173","endLine":76,"endColumn":45,"suggestions":"179"},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'setUsername' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["182"],["183"],"'faCopy' is defined but never used.","'CopyToClipboard' is defined but never used.","React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array. You can also do a functional update 'setQuestion(q => ...)' if you only need 'questions' in the 'setQuestion' call.",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [ENDPOINT, props, username]",{"range":"191","text":"192"},"Update the dependencies array to be: [question, pollid, expired, history, props, ENDPOINT, username]",{"range":"193","text":"194"},"Update the dependencies array to be: [props, setQuestion, history, ENDPOINT, questions]",{"range":"195","text":"196"},[4680,4697],"[ENDPOINT, props, username]",[3474,3527],"[question, pollid, expired, history, props, ENDPOINT, username]",[2307,2346],"[props, setQuestion, history, ENDPOINT, questions]"]